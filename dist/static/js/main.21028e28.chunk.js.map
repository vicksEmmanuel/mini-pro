{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","getFirestore","auth","then","console","log","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","_ref","links","uid","layout_SignedInLinks","layout_SignedOutLinks","compose","notifications","firestore","ordered","firestoreConnect","collection","limit","orderBy","map","element","key","id","user","content","moment","time","toDate","fromNow","ProjectSUmmary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","ProjectSummary","Dashboard","_this$props","this","project_ProjectList","dashboard_Notifications","react_router","Component","ownProps","match","params","data","SignIn","email","password","handleChange","event","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlForm","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstname","lastname","signUp","newUser","_ref3","createUserWithEmailAndPassword","response","doc","set","firstName","lastName","CreateProject","createProject","history","push","name","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21028e28.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className='right'>\r\n            <li>\r\n                <NavLink to='/create-todo'>New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={ props.signOut }>Log Out</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n                    {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks); ","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({\r\n                type: 'LOGIN_SUCCESS'\r\n            })\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'LOGIN_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            console.log('sign out success')\r\n            dispatch({\r\n                type: 'SIGNOUT_SUCCESS'\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirestore, getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response) => {\r\n            console.log(response);\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstname,\r\n                lastName: newUser.lastname,\r\n                initials: newUser.firstname[0] + newUser.lastname[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'SIGNUP_SUCCESS'\r\n            })\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'SIGNUP_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className='right'>\r\n            <li>\r\n                <NavLink to='/signup'>Sign Up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signin'>Log In</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;   ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Navbar = ({auth, profile}) => {\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\r\n    return (\r\n       <nav className='nav-wrapper grey darken-3'>\r\n            <div className='container'>\r\n                <Link to='/' className='brand-logo'>MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n       </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps \r\n)(Navbar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'; \r\nimport { compose } from 'redux';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = ({notifications}) => {\r\n    return (\r\n        <div className='container section'>\r\n            <div className='card z-depth-0'>\r\n                    <div className='card-content'>\r\n                        <span className='card-title'>Notifications</span>\r\n                        <ul className='notifications'>\r\n                        { notifications && notifications.map((element)=> {\r\n                            console.log(element);\r\n                            return (\r\n                                <li key={element.id}>\r\n                                    <span className='pink-text'>{element.user}</span>\r\n                                    <span>{element.content}</span>\r\n                                    <div className='grey-texxt note-date'>\r\n                                        {moment(element.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        notifications : state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection : 'notifications',\r\n            limit: 3,\r\n            orderBy: ['time', 'desc']\r\n        }\r\n    ])\r\n)(Notifications);","import React from 'react';\r\nimport moment from 'moment';\r\nconst ProjectSUmmary = ({project}) => {\r\n    return (\r\n        <div className='card z-depth-0 project-summary'>\r\n             <div className='card-content grey-text text-darken-3'>\r\n                <span className='card-title'>{project.title}</span>\r\n                <p>Posted by the { project.authorFirstName + \" \" +project.authorLastName}</p>\r\n                <p className='grey-text'>{ moment(project.createdAt.toDate()).calendar() } </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSUmmary;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport ProjectSummary from './ProjectSummary';\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className='project-list section'>\r\n            { projects && projects.map((element)=> {\r\n                console.log(element);\r\n                return (\r\n                    <Link to={'/project/'+element.id} key={element.id}>\r\n                        <ProjectSummary project={element} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component }from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../project/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'; \r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component{\r\n    render() {\r\n        const { projects, auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className='dashboard container'>\r\n                <div className='row'>\r\n                    <div className='col s12 m6'>\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className='col s12 m5 offset-m1'>\r\n                        <Notifications/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'project', orderBy: ['createdAt', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect} from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    if(project) {\r\n        return (\r\n            <div className='container section project-details'>\r\n                <div className='card z-depth-0'>\r\n                    <div className='card-content'>\r\n                        <span className='card-title'>{project.title}</span>\r\n                        <p>\r\n                            {project.content}\r\n                        </p>\r\n                    </div>\r\n                    <div className='card-action text-grey lighte-4 grey-text'>\r\n                        <div>Posted by {project.authorFirstName + \" \" + project.authorLastName}</div>\r\n                        <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='container section project-details'>\r\n                <div className='card z-depth-0'>\r\n                    <div className='card-content'>\r\n                        <span className='card-title'>Project Loading ....</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.project;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'project'}\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        [event.target.id] : event.target.value\r\n    });\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    const { signIn } = this.props;\r\n    signIn(this.state);\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/'/>\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className='white'>\r\n            <h5 className='grey-text text-darken-3'>Sign In</h5>\r\n            <div className='input-field'>\r\n                <label htmlForm='email'>Email</label>\r\n                <input type='email' id='email' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className='input-field'>\r\n                <label htmlForm='password'>Password</label>\r\n                <input type='password' id='password' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className='input-field'>\r\n                <button className='btn pink lighten-1 z-depth-0'>Log In</button>\r\n                <div className='red-text center'>\r\n                  {\r\n                    authError ? (\r\n                      <p>{ authError }</p>\r\n                    ) : null\r\n                  }\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (credentials) => dispatch(signIn(credentials))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstname: '',\r\n    lastname: ''\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        [event.target.id] : event.target.value\r\n    });\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if(auth.uid) return <Redirect to=\"/\"/>\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className='white'>\r\n            <h5 className='grey-text text-darken-3'>Sign Up</h5>\r\n            <div className='input-field'>\r\n                <label htmlForm='email'>Email</label>\r\n                <input type='email' id='email' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className='input-field'>\r\n                <label htmlForm='firstname'>First Name</label>\r\n                <input type='text' id='firstname' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className='input-field'>\r\n                <label htmlForm='lastname'>Last Name</label>\r\n                <input type='text' id='lastname' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className='input-field'>\r\n                <label htmlForm='password'>Password</label>\r\n                <input type='password' id='password' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className='input-field'>\r\n                <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\r\n                <div className='red-text center'>\r\n                  { authError ? <p>{ authError }</p> : null }\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n  return {\r\n    auth : state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp : (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectAction';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        [event.target.id] : event.target.value\r\n    });\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className='white'>\r\n            <h5 className='grey-text text-darken-3'>Create Todos</h5>\r\n            <div className='input-field'>\r\n                <label htmlForm='title'>Title</label>\r\n                <input type='text' id='title' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className='input-field'>\r\n                <label htmlForm='content'>Todo</label>\r\n                <textarea name='' id='content' className='materialize=textarea' onChange={this.handleChange}></textarea>\r\n            </div>\r\n            <div className='input-field'>\r\n                <button className='btn darkblue lighten-1 z-depth-0'>Create</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { auth: state.firebase.auth }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = ( project ) => {\r\n    console.log('Here is project', project);\r\n    return  (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('project').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type:'ÇREATE_PROJECT',\r\n                project\r\n            });\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type:'ÇREATE_PROJECT_ERROR',\r\n                err\r\n            });\r\n        });\r\n    }\r\n};","import React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard}/>\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/signup' component={SignUp}/>\n          <Route path='/create-todo' component={CreateProject}/>\n          <Route path='/project/:id' component={ProjectDetails}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\nconst authReducer = (state = initState,action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_SUCCESS': \r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'LOGIN_ERROR' :\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'SIGNOUT_SUCCESS' : \r\n            return  state\r\n        case 'SIGNUP_SUCCESS' :\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR' :\r\n            console.log('sign up error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah',authorFirstName: ''},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah',authorFirstName: ''},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah', authorFirstName: ''}\r\n    ]\r\n};\r\nconst projectReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT' :\r\n            console.log('created project',action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR' :\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer }from 'react-redux-firebase'; \r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBsagpUJJ9qEVnkmgUE48Hshd1IcKXQUUI\",\r\n    authDomain: \"min-pro-7f703.firebaseapp.com\",\r\n    databaseURL: \"https://min-pro-7f703.firebaseio.com\",\r\n    projectId: \"min-pro-7f703\",\r\n    storageBucket: \"min-pro-7f703.appspot.com\",\r\n    messagingSenderId: \"794957373668\",\r\n    appId: \"1:794957373668:web:c826495a9763fc77\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users',attachAuthIsReady: true })\n        )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n});\n"],"sourceRoot":""}